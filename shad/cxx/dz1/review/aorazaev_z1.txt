Задача 1
Автор: Аман Оразаев

Работая над алгоритмом быстрого вычисления a^n студент ошибся и написал код:
unsigned long f (unsigned int a, unsigned int n) {
    unsigned long r = 1;
    while (n > 0) {
        if (n % 2 == 1) {
            r *= a;
            n--;
        } else {
            r *= r;
            n /= 2;
        }
    }
    return r;
}
Что будет вычислять функция? Когда ответ будет равен а^n?

##########
Решение:
Определим следующую рекурсивную функцию:
R(a, 0, r) = r
R(a, n, r) = [n % 2 == 0] * R(a, n / 2, r^2) + [n % 2 == 1] * R(a, n - 1, r * a)

Здесь "[expr]" -- равняется 1, когда expr истинно и 0 в противном случае.
Конкретно функция написанная студентом будет равняться:
f(a, n) = R(a, n, 1)

Сама же рекурсивная функция ,нужная для возведения в степень, вычисляющая P(a, 0, r) = r * a^n
выглядит вот так:

P(a, 0, r) = r
P(a, 1, r) = a * r
P(a, n, r) = [n % 2 == 0] * P(a^2, n / 2, r) + [n % 2 == 1] * P(a^2, n - 1, r * a)

А степерь вычисляется следующим образом:
pow(a, n) = P(a, n, 1)

Функция f будет находить a^n, если n = 0, n = 2^k + 1, k = 0..+inf или n = 2^k - 1, k = 1..+inf
