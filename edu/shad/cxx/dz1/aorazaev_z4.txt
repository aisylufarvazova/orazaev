Задание 4.
Автор: Аман Оразаев

a) a = (((b + (c * d)) << 2) & 8)
    Результат: вернет a = 8 или a = 0.
    8 будет если b + c * d == 2.

б) a & 077 |= 3
    Не скомпилируется, слева от "|=" должно стоять lvalue.

в) (a == b) || ((a == c) && (c < 5))
    Стандарт говорит, что && выполняется раньше ||
    Результат: если a == b вернет true, если a == c и
    a < 5 вернет true, в остальном false

г) c = (x != 0)

д) (0 <= I) < 7
   Результат: всегда true.

е) 1,(2 + 3)
    Результат: вернет 5

ж) a=-1++b--5
    Не скомпилируется. Посчитает, что ++ и -- это инкремент и декремент.

з) a = (((-1) + (+b)) - (-5))
    Результат: вернет a, равное b + 4.

и) a = (b == (c++))
    Несмотря на то, что постфиксный ++ выполняется раньше,
    мы все равно работаем (с++) вернет не увеличенное значение
    c.
    Результат: вернет a. a и b равны с, c увеличится на 1

к) a = (b = (c = 0))
    Стандарт говорит, что = групперуются с права на лево.
    Результат: Вернет a. a b и с равны 0.

л) ((a[4])[2]) *= ((*b) ? c : ((*d)*2))
    Результат: вернет a[4][2].
    Стоит заметить, что то, что будет лежать в a[4][2]
    будет зависеть от значения *b, если оно приведется
    к true, то a[4][2] = a[4][2] * c, иначе умноженное
    на *d*2

м) (a - b), (c = d)
   Результат: вернет c, которое будет равно d.

н) *(p++)
    Результат: объект по адресу p, p увеличится на 1.

o) *(--p)
    Результат: объект по адресу (p - 1), p уменьшится на 1.

п) ++++a--
    Не скомпилируется, так как сначала выполнится постфиксный
    декремент, вернет rvalue, а для последующего префиксного 
    инкримента нужен modifiable lvalue.

р) (-++++a)--
    Не скомпилируется. После того как выполнятся два декремента 
    унарный - вернет rvalue, а постфиксный декремент требует
    modifiable lvalue.

с) ++a--
    Не скомпилируется. Постфиксный декремент вернет rvalue, а
    префиксный инкремент требует modifiable lvalue.

т) (int*)(p->m)
    Сначала доступ к члену p, потом приведение к типу указатель
    на int.
    Результат: p->m приведенный к типу int*

у) *(p.m)
    Результат: объект по адресу p.m

ф) *(a[i])
    Результат: объект по адресу a[i]
